#!/bin/bash

# COLORS
RED="\e[31m"
GREEN="\e[32m"
BLUE="\e[34m"
ENDCOLOR="\e[0m"

# If user is root end script
if [ "$(whoami)" == "root" ]; then
  exit 1
fi

# Ask yes or no function
ask_yn() {
  while true; do
    read -p "$1 (y/n): " yn
    case $yn in
      [Yy]* ) return 0;;  # Return 0 (success) for yes
      [Nn]* ) return 1;;  # Return 1 (failure) for no
      * ) echo -e "${RED}Please answer y or n.${ENDCOLOR}";;
    esac
  done
}

# Instalar paru si no está instalado
install_paru(){
  if ! command -v paru &>/dev/null; then
      echo -e "\n${BLUE}>> Instalando paru (AUR helper)...\n${ENDCOLOR}"
      git clone https://aur.archlinux.org/paru.git
      cd paru
      makepkg -si
      cd ..
      rm -rf paru
  fi
}

# Instalar yay si no está instalado
install_yay(){
  if ! command -v yay &> /dev/null; then
    echo -e "\n${BLUE}>> Instalando yay (AUR helper)...\n${ENDCOLOR}"
    sudo pacman -Syu --needed base-devel git
    git clone https://aur.archlinux.org/yay.git ~/yay
    (cd ~/yay && makepkg -si)
  fi
}

# Instala los paquetes
install_packages(){
  echo -e "\n${BLUE}>> Instalando o actualizando paquetes...\n${ENDCOLOR}"
  if command -v yay &> /dev/null; then
    yay -S --needed --noconfirm - < $1
  else
    if command -v paru &>/dev/null; then
      paru -S --needed --noconfirm - < $1
    else
      pacman -S --needed --noconfirm - < $1
    fi
  fi
}

# Función para instalar el repositorio de blackarch
install_blackarch_repo(){
  # Instalando Repositorio de Blackarch
  echo -e "\n${BLUE}>> Instalando repositorio de BlackArch...\n${ENDCOLOR}"
  curl -O https://blackarch.org/strap.sh
  chmod +x strap.sh
  sudo ./strap.sh
}

copy_files(){
  local dotfilesPathBspwm="bspwm-dotfiles"
  echo -e "\n${BLUE}>> Copiando archivos de configuración...\n${ENDCOLOR}"

  cp -r $dotfilesPathBspwm/.config/bspwm ~/.config/
  cp -r $dotfilesPathBspwm/.config/neofetch ~/.config/
  cp -r $dotfilesPathBspwm/.config/rofi ~/.config/
  cp -r $dotfilesPathBspwm/.config/kitty/ ~/.config/
  cp -r $dotfilesPathBspwm/.config/jgmenu/ ~/.config/
  cp -r $dotfilesPathBspwm/.config/ranger/ ~/.config/
  cp $dotfilesPathBspwm/.config/wallpaper.conf ~/.config/
  cp $dotfilesPathBspwm/.config/.zshrc ~/
  
  [ ! -d ~/.local/share/fonts ] && mkdir -p ~/.local/share/fonts
  [ ! -d ~/.local/share/icons ] && mkdir -p ~/.local/share/icons
  [ ! -d ~/.local/share/themes ] && mkdir -p ~/.local/share/themes
  [ ! -d ~/.local/share/rofi ] && mkdir -p ~/.local/share/rofi

  mkdir ~/.local/share/fonts/Hack
  unzip $dotfilesPathBspwm/.local/share/fonts/HackNerdFont.zip -d ~/.local/share/fonts/Hack
  tar xfv $dotfilesPathBspwm/.local/share/icons/Simp1e-Tokyo-Night-Storm.tgz
  mv $dotfilesPathBspwm/.local/share/icons/Simp1e-Tokyo-Night-Storm ~/.local/share/icons
  unzip $dotfilesPathBspwm/.local/share/icons/Tokyonight-Dark-Icons.zip -d ~/.local/share/icons
  unzip $dotfilesPathBspwm/.local/share/themes/Tokyonight-Storm-B.zip -d ~/.local/share/themes
  cp -r $dotfilesPathBspwm/.local/share/rofi -d ~/.local/share/
}

# Directorio de respaldo para la configuración existente
BACKUP_DIR="$HOME/backup_$(date +%Y%m%d_%H%M%S)"
mkdir -p "$BACKUP_DIR"

backup_files_and_copy_dots() {
    local src=$1
    local dest=$2
    if [ -e "$dest" ]; then
        echo -e "\n${BLUE}Backing up existing $(basename "$dest") to $BACKUP_DIR \n${ENDCOLOR}"
        mv "$dest" "$BACKUP_DIR"
    fi
    cp -rf "$src" "$dest"
}


# <---------------------------------------Funciones de Instalación--------------------------------------->

# Bare Install (END) #

# Instalar bspwm
install_bspwm(){
  local $dotfilesPathBspwm="bspwm-dotfiles"
  # Creando carpeta de Dotfiles
  echo -e "\n${BLUE}>> Clonando Repositorio\n${ENDCOLOR}"
  cd
  mkdir Github
  cd Github/
  git clone --depth=1 https://github.com/Panther-14/bspwm-dotfiles.git
  
  # Instalar paru como AUR helper
  install_paru

  # Instalar o actualizar paquetes
  install_packages $dotfilesPathBspwm/packages_bspwm.lst

  if ask_yn "Deseas añadir paquetes extra"; then
    install_packages $dotfilesPathBspwm/packages_extra.lst
  fi

  # Cambia el shell del usuario actual a zsh
  echo -e "\n${BLUE}>> Cambiando shell...\n${ENDCOLOR}" 
  chsh -s "$(which zsh)"

  # Instalar Oh My Zsh para el usuario actual
  echo -e "\n${BLUE}>> Instalando Oh My Zsh...\n${ENDCOLOR}"
  sh -c "$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

  # Instalar plugins zsh
  echo -e "\n${BLUE}>> Instalando plugins omz...\n${ENDCOLOR}"
  git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
  git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions

  # Copiamos configuración
  copy_files

  # Removiendo Repositorio
  echo -e "\n${BLUE}>> Limpiando archivos...\n${ENDCOLOR}"
  rm -rf ~/Github

  # Mensaje de Instalado
  echo -e "\n${GREEN}>> Proceso de instalación y configuración completado.\n${ENDCOLOR}"
  notify-send "BSPWM INSTALADO"
}

# Instalar hyprland
install_hyprland(){
  local dotfilesPathHypr="Hyprdots" 
  # Creando carpeta de Dotfiles
  echo -e "\n${BLUE}>> Clonando Repositorio\n${ENDCOLOR}"
  cd
  mkdir Github
  cd Github/
  git clone --depth=1 https://github.com/Panther-14/Hyprdots.git

  # Instalar paru como AUR helper
  install_paru

  # Instalar o actualizar paquetes
  install_packages $dotfilesPathHyprdots/packages_extra.lst/packages_hyprland.lst

  if ask_yn "Deseas añadir paquetes extra"; then
    install_packages $dotfilesPathHyprdots/packages_extra.lst/packages_extra.lst
  fi

  # Cambia el shell del usuario actual a zsh
  echo -e "\n${BLUE}>> Cambiando shell...\n${ENDCOLOR}"
  chsh -s "$(which zsh)"

  # Instalar Oh My Zsh para el usuario actual
  echo -e "\n${BLUE}>> Instalando Oh My Zsh...\n${ENDCOLOR}"
  sh -c "$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

  # Instalar plugins zsh
  echo -e "\n${BLUE}>> Instalando plugins omz...\n${ENDCOLOR}"
  git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
  git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions


  # Copiamos configuración
  backup_files_and_copy_dots "$dotfilesPathHypr/.config/" "$HOME/.config/"

  backup_files_and_copy_dots "$dotfilesPathHypr/.zshrc" "$HOME/.zshrc"
  backup_files_and_copy_dots "$dotfilesPathHypr/.p10k.zsh" "$HOME/.p10k.zsh"

  [ ! -d ~/.local/share/fonts ] && mkdir -p ~/.local/share/fonts
  [ ! -d ~/.local/share/icons ] && mkdir -p ~/.local/share/icons
  [ ! -d ~/.local/share/themes ] && mkdir -p ~/.local/share/themes
  [ ! -d ~/.local/share/rofi ] && mkdir -p ~/.local/share/rofi

  mkdir ~/.local/share/fonts/Hack
  unzip $dotfilesPathHypr/.local/share/fonts/HackNerdFont.zip -d ~/.local/share/fonts/Hack
  tar xfv $dotfilesPathHypr/.local/share/icons/Simp1e-Tokyo-Night-Storm.tgz
  mv $dotfilesPathHypr/.local/share/icons/Simp1e-Tokyo-Night-Storm ~/.local/share/icons
  unzip $dotfilesPathHypr/.local/share/icons/Tokyonight-Dark-Icons.zip -d ~/.local/share/icons
  unzip $dotfilesPathHypr/.local/share/themes/Tokyonight-Storm-B.zip -d ~/.local/share/themes

  # Removiendo Repositorio
  echo -e "\n${BLUE}>> Limpiando archivos...\n${ENDCOLOR}"
  rm -rf ~/Github

  # Mensaje de Instalado
  echo -e "\n${GREEN}>> Proceso de instalación y configuración completado.\n${ENDCOLOR}"

}

# <---------------------------------------Instalación--------------------------------------->

black_or_white(){
  case "$1" in
    bsp)
      echo -e "\n${GREEN}>> Bspwm seleccionado.\n${ENDCOLOR}"
      install_bspwm
    ;;
    hypr)
      echo -e "\n${GREEN}>> Hyprland seleccionado.\n${ENDCOLOR}"
      install_hyprland
    ;;
  esac

  if ask_yn "¿Deseas instalar BlackArch?"; then
    echo -e "\n${GREEN}>> Instalación BlackArch seleccionada.\n${ENDCOLOR}"
    install_blackarch_repo
  fi
}

case "$1" in
  --bspwm|[Bb]spwm)
    black_or_white bsp
  ;;
  --hyprland|[Hh]yprland)
    black_or_white hypr
  ;;
  *)
    echo -e "\n${RED}>> Debes seleccionar un entorno (hyprland/bspwm)\n${ENDCOLOR}"
  ;;
esac
